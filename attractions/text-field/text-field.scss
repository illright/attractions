@import "../var-defaults.scss";
@import "_attractions-theme.scss";

.text-field {
  input[type="search"]::-webkit-search-cancel-button {
    position: relative;
    top: 1px;
    height: 1.25em;
    width: 1.25em;
    cursor: pointer;
    border-radius: 50%;

    @if variable-exists(x-icon) {
      appearance: none;
      border: .1875em solid transparent;
      background-image: url($x-icon);
      background-size: contain;
    }

    &:hover {
      background-color: transparentize($dark, .9);
    }
  }

  input,
  textarea {
    outline: none;
    padding: 0 .625em .0625em;
    font-family: $font;
    font-size: 1rem;
    font-weight: $thin-font-weight;
    box-sizing: border-box;
    border: 0 solid $textfield-border;  // to disable the global border
    border-bottom-width: .0625em;
    background-color: $textfield-bg;
    border-top-left-radius: .375em;
    border-top-right-radius: .375em;
    width: 100%;
    height: 2.8em;

    &:hover {
      background-color: darken($textfield-bg, 3%);
    }

    &:hover:disabled {
      background-color: lighten($textfield-bg, 1%);
    }

    &:focus {
      background-color: darken($textfield-bg, 8%);
      border-bottom-width: .125em;
      border-color: lighten($main, 4%);
      padding-bottom: 0;
    }
  }

  input:disabled,
  textarea:disabled {
    background-color: lighten($textfield-bg, 1%);
    border-color: transparentize($dark, .7);
    color: $disabled;
  }

  textarea {
    padding: .75em .625em .0625em;
    height: 6em;
  }

  &.with-item {
    position: relative;

    &.left {
      flex-direction: row-reverse;

      input,
      textarea {
        padding-left: 3rem;
      }

      input[type="search"] {
        padding-left: 2.2em;
      }

      > :global .item {
        left: .625em;
        font-weight: $bold-font-weight;
      }
    }

    &.right {
      input,
      textarea {
        padding-right: 1.875em;
        text-align: right;
      }

      > :global .item {
        right: .625em;
      }
    }

    > :global .item {
      color: $textfield-item;
      height: 1.1em;
      position: absolute;
      top: .85em;
    }

    > input:focus + :global .item {
      color: $main;
      stroke: $main;

      :global svg {
        stroke: $main;
      }
    }

    &.right-align input {
      text-align: right;
    }

    input[type="number"] {
      appearance: textfield;

      &::-webkit-outer-spin-button,
      &::-webkit-inner-spin-button {
        appearance: none;
        margin: 0;
      }
    }

    > :global svg.item {
      height: 1em;
      top: .9em;
    }

    input:invalid + :global svg.item {
      stroke: $danger;
    }
  }

  &.outline {
    position: relative;
    margin-top: .65em;

    label {
      font-family: $font;
      background-color: #fff;
      color: $textfield-border;
      padding: 0 .25em;
      position: absolute;
      top: 0;
      left: 1.4em;
      transform: translate(-.25em, -55%);
      border-radius: .3125em;
    }

    &.with-item.left {
      input {
        padding-left: 2.2em;
      }

      label {
        left: 2.2em;
      }

      :global svg {
        stroke: $disabled;
      }

      > input:focus ~ :global .item {
        color: $main;
      }
    }

    input {
      border-radius: 1.5625em;
      border: 1px solid $textfield-border;
      background-color: transparent;
      padding: 0 1.4em;

      &:hover {
        border-color: transparentize(black, .3);

        + label {
          color: transparentize(black, .3);
        }
      }

      &:focus {
        border-color: $main;

        + label {
          color: $main;
        }
      }

      &:invalid {
        border-color: transparentize($danger, .3);

        + label {
          color: transparentize($danger, .3);
        }

        ~ :global svg.item {
          stroke: transparentize($danger, .3);
        }

        &:focus ~ :global svg.item {
          stroke: transparentize($danger, .3);
        }
      }
    }

    input:focus ~ :global svg.item {
      stroke: $main;
    }
  }

  input:invalid {
    box-shadow: none;
    border-bottom-color: $danger;
    background: $textfield-bg-error;
  }

  input:not(.outline):invalid {
    background-color: $textfield-bg-error;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  > .error {
    font-size: .8rem;
    color: transparentize($danger, .3);
    font-weight: $bold-font-weight;
  }

  &.no-spinner > input[type="number"] {
    appearance: textfield;

    &::-webkit-inner-spin-button,
    &::-webkit-outer-spin-button {
      appearance: none;
      margin: 0;
    }
  }
}
