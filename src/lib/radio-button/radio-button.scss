@use 'sass:color';
@use '../_variables' as vars;
@use '../_mixins';

.radio {
  align-items: center;
  cursor: pointer;
  display: flex;
  font-family: vars.$font;
  position: relative;

  > input[type='radio'] {
    @include mixins.hide-accessible;
  }

  > .selector {
    border: 0.125em solid var(--a-light-contrast);
    border-radius: 50%;
    cursor: pointer;
    height: 1.25em;
    position: relative;
    width: 1.25em;

    &::after {
      border-radius: 50%;
      content: '';
      height: 2.25em;
      left: 50%;
      position: absolute;
      top: 50%;
      transform: translate(-50%, -50%);
      width: 2.25em;
    }
  }

  > input:checked + .selector::before {
    border-radius: 50%;
    content: '';
    height: 0.5em;
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 0.5em;
  }
}

input:disabled + .selector {
  background-color: hsl(
    var(--a-light-contrast-h),
    var(--a-light-contrast-s),
    calc(var(--a-light-contrast-l) + 6.5%)
  );
  cursor: not-allowed;
}

input:checked + .selector {
  background-color: var(--a-main);
  border-color: var(--a-main);

  &::before {
    background-color: var(--a-main-text);
  }
}

input:disabled:checked + .selector {
  background-color: var(--a-disabled);
  border-color: hsl(
    var(--a-disabled-h),
    var(--a-disabled-s),
    calc(var(--a-disabled-l) + 2%)
  );
}

.radio:hover {
  :not(:focus):not(:disabled) + .selector::after {
    background-color: rgba(var(--a-dark), 0.05);
  }

  :not(:focus):not(:disabled):checked + .selector::after {
    background-color: hsla(var(--a-main-hsl), 0.05);
  }

  :disabled + .selector::after {
    background: none;
  }
}

input:focus + .selector::after {
  background-color: rgba(var(--a-dark), );
}

input:focus:checked + .selector::after {
  background-color: hsla(var(--a-main-hsl), 0.125);
}
