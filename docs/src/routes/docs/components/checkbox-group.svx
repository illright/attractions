---
name: CheckboxGroup
relatedComponents:
  - name: Checkbox
    link: ./docs/components/checkbox
---

<script>
  import { CheckboxGroup } from 'attractions';
  import Showcase from 'src/containers/docs/showcase.svelte';
  import ColorPreview from 'src/components/docs/color-preview.svelte';
  import RelatedComponents from 'src/components/docs/related-components.svelte';

  const items = [
    { value: 'couch_potato', label: 'Sitting lazily on the couch', checked: true, disabled: true },
    { value: 'cycling', label: 'Cycling' },
    { value: 'running', label: 'Running' },
    { value: 'swimming', label: 'Olympic Swimming' },
  ];
  const colors = [
    { value: '#000000' },
    { value: '#ff0000' },
    { value: '#00ff00' },
    { value: '#0000ff' },
    { value: '#cccccc' },
    { value: '#ffffff' },
  ];
</script>


# CheckboxGroup

A group of `<Checkbox>`es

<RelatedComponents components={relatedComponents} />

<Showcase>
  <div slot="showcase">
    <p>Select your favorite sports:</p>
    <CheckboxGroup name="sports[]" {items} labelsLeft />
    <p>And color as well:</p>
    <CheckboxGroup name="colors[]" items={colors} max={2} color />
  </div>
  <div slot="source">

```svelte
<script>
const items = [
  { value: 'couch_potato', label: 'Sitting lazily on the couch', checked: true, disabled: true },
  { value: 'cycling', label: 'Cycling' },
  { value: 'running', label: 'Running' },
  { value: 'swimming', label: 'Olympic Swimming' },
];
const colors = [
  { value: '#000000' },
  { value: '#ff0000' },
  { value: '#00ff00' },
  { value: '#0000ff' },
  { value: '#cccccc' },
  { value: '#ffffff' },
];
</script>

<p>Select your favorite sports:</p>
<CheckboxGroup name="sports[]" {items} />
<p>And color as well:</p>
<CheckboxGroup name="colors[]" items={colors} max={2} color />
```

  </div>
</Showcase>


## Properties {#properties}

### Functional Properties

| Name | Default | Type | Description |
| ---- | ------- | ---- | ----------- |
| ==**`items`**==&nbsp;<span class="required">*</span> | | `Array` | An array of `{ value, label, checked, disabled }` objects, where only the value is required. Must contain at least one value. |
| ==**`name`**==&nbsp;<span class="required">*</span> | | `string` | The name to assign to all checkboxes belonging to the same group. |
| **`labelsLeft`** | `false` | `boolean` | Places the labels to the left of the checkboxes. |
| **`max`** | `Infinity` | `number` | The maximum allowed number of checkboxes to select. |
| **`color`** | `false` | `boolean` | Designates the checkboxes as color selections. Labels are ignored. |
| **`...`** |  | `any` | Everything else will be passed to the underlying `<Checkbox>` components. |

<div class="required">* Required</div>

### Class Properties

| Name | Default | Type | Description |
| ---- | ------- | ---- | ----------- |
| **`class`** | `null` | `string` | A class string to add to the wrapper `<div>` element. |
| **`checkboxClass`** | `null` | `string` | A class string to add to the `<Checkbox>` components. |
| **`labelClass`** | `null` | `string` | A class string to assign to the labels' wrapping `<span>`s. |


## Events {#events}

| Name | Event Detail | Description |
| ---- | ------------ | ----------- |
| **`change`** | `{ value, checked, nativeEvent }` | Fired when the selection changes. The `value` contains the element's `value` passed as a prop, `checked` represents the input's state, and `nativeEvent` has the [native change evenet](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event).<br> Forwarded from `<Checkbox>` components. |


## SCSS Variables {#scss-variables}

| Name | Description | Default |
| ---- | ----------- | ------- |
